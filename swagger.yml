consumes:
  - application/json

definitions:
  User:
    $ref: "#/definitions/MaskedUser"
    properties:
      passwords:
        type: object 
        $ref: '#/definitions/Passwords'
  
  MaskedUser:
    type: object
    properties:
      id:
        type: integer
        format: int64
      email:
        type: string
      username:
        type: string
      display_name:
        type: string
      biography:
        type: string
      birthday:
        type: string
      profile_picture:
        type: string
      points:
        type: integer
        format: int32
      date_created:
        type: string

  Passwords: 
    type: object 
    properties:
      old_password:
        type: string
      password:
        type: string
      password_r:
        type: string

  RestErr:
    type: object
    properties:
      message:
        type: string
      status:
        type: integer
        format: int
      error:
        type: string

parameters:
  X-Public:
    name: X-Public
    type: boolean
    in: header
    required: true
  
  user_id:
    type: integer
    format: int64
    name: user_id
    in: path
    required: true

  access_token:
    name: access_token
    type: integer
    in : header
    required: true 

info:
  description: Flash cards learning platform Users API
  title: Moku Moku Users API
  version: 1.0.0

paths:
  /users:
    post:
      tags: ["user"]
      operationId: createUser
      description: Stores a new user
      parameters:
        - name: new_user_data
          in: body
          required: true
          schema:
            allOf: 
              - $ref: "#/definitions/User" 
              - type: object
                required:
                - email
                - username
                - password
                - password_r
      responses:
        '200':
          description: User created
        default:
          description: Error
          schema:
            $ref: "#/definitions/RestErr"

  /users/{user_id}:
    parameters:
      - $ref: "#/parameters/user_id"
      - $ref: "#/parameters/access_token"
    get:
      tags:
        - user
      operationId: getUser
      description: Gets a user from the database
      parameters:
        - $ref: "#/parameters/X-Public"
      responses:
        '200':
          description: User data retrieved
          schema:
            type: object
            $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/RestErr"
    patch:
      tags:
        - user
      operationId: partialUpdateUser
      description: Partially update a user
      parameters:
        - $ref: "#/parameters/X-Public"
        - name: updated_user_data
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        '200':
          description: User updated
          schema:
            type: object
            $ref: "#/definitions/User"
        default:
          description: Error
          schema: 
            $ref: "#/definitions/RestErr"
    delete:
      tags:
        - user
      operationId: deleteUser
      description: Deletes a user from the database
      parameters: 
        - name: user_passwords
          in: body
          required: true
          schema:
            allOf:
              - $ref: "#/definitions/Passwords"
              - type: object
                required:
                - password
                - password_r
            
      responses:
        '200':
          description: User data deleted
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/RestErr"
    put:
      tags:
        - user
      operationId: updateUser
      description: Update a user
      parameters:
        - $ref: "#/parameters/X-Public"
        - name: updated_user_data
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        '200':
          description: User updated
          schema:
            type: object
            $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/RestErr"

  /users/{user_id}/change_password:
    parameters:
      - $ref: "#/parameters/user_id"
      - $ref: "#/parameters/access_token"
      - name: user_passwords
        in: body
        required: true
        schema:
          allOf:
            - $ref: "#/definitions/Passwords"
            - type: object
              required:
                - old_password
                - password
                - password_r
    patch:
      tags:
        - user
      operationId: updateUserPassword
      description: Users can update their password
      responses: 
        '200':
          description: Password successfully updated
        default: 
          description: Error
          schema: 
            $ref: "#/definitions/RestErr"

  /users/{user_id}/points/{user_points}:
    parameters:
      - $ref: "#/parameters/user_id"
      - $ref: "#/parameters/access_token"
      - $ref: "#/parameters/X-Public"
      - type: integer
        format: int64
        name: user_points
        in: path
        required: true
    patch:
      tags:
        - user
      operationId: updateUserPoints
      description: Update user's points
      responses:
        '200':
          description: Points successfully updated
          schema:
            type: object
            $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/RestErr"

produces:
  - application/json

schemes:
  - http
  - https
  
swagger: "2.0"
